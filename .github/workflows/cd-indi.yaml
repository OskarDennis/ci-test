#
# 2 Workflows für Prod Deployment und Stage Deployment
# Stage aus Release Branches deployed
# Stage bekommt keine Tags, sondern Build basiert auf Comit Hash
# Prod kann nur von Tags deployed werden
# Zwei Faktor deployment für Prod ()
# Unit Test ausführung vor Deployment
#
#

name: Build and Deploy (Indi)
on:
  workflow_dispatch:

jobs:
  ci:
    name: Run CI
    if: 1 == 2
    uses: ./.github/workflows/ci.yaml
  build:
    runs-on: ubuntu-latest
    needs: ci
    environment: 
      name: Development
      url: https://dev.github.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          format: 'json'
          output: 'trivy-report.json'
      - name: Add Trivy results to GitHub step summary
        run: |
          ls -la
          cat trivy-report.json
          echo "### Trivy Scan Summary" >> $GITHUB_STEP_SUMMARY
          if [ -s trivy-report.json ]; then
            critical_issues=$(jq '.Results[].Vulnerabilities[] | select(.Severity == "CRITICAL") | .VulnerabilityID' trivy-report.json | wc -l)
            high_issues=$(jq '.Results[].Vulnerabilities[] | select(.Severity == "HIGH") | .VulnerabilityID' trivy-report.json | wc -l)
            echo "- **CRITICAL Issues**: $critical_issues" >> $GITHUB_STEP_SUMMARY
            echo "- **HIGH Issues**: $high_issues" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "#### Detailed Results" >> $GITHUB_STEP_SUMMARY
            jq -r '.Results[] | select(.Vulnerabilities != null) | .Vulnerabilities[] | "- **Vulnerability**: \(.VulnerabilityID)\n  - **Package**: \(.PkgName)\n  - **Severity**: \(.Severity)\n  - **Installed Version**: \(.InstalledVersion)\n  - **Fixed Version**: \(.FixedVersion // "Not available")\n"' trivy-report.json >> $GITHUB_STEP_SUMMARY
          else
            echo "No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
          fi
  
      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.json
  
      - name: Setup Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: citest/ciapp
          tags: |
              type=sha,enable=true,priority=400,prefix={{date 'YYYYMMDDtHHmmss' tz='Europe/Berlin'}}-,suffix=,format=short
              type=ref,event=tag,enable=true,priority=300
              type=ref,event=branch,enable=true,priority=300
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: DD.MM.YYYY HH:mm:ss
          timezone: Europe/Berlin
      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          YEAR: "${{ steps.current-time.outputs.year }}"
          DAY: "${{ steps.current-time.outputs.day }}"
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY

#
# 2 Workflows für Prod Deployment und Stage Deployment
# Stage aus Release Branches deployed
# Stage bekommt keine Tags, sondern Build basiert auf Comit Hash
# Prod kann nur von Tags deployed werden
# Zwei Faktor deployment für Prod ()
# Unit Test ausführung vor Deployment
#
#


name: Build and Deploy (Development)
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        type: string
        default: 'develop'
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        default: 'Preview Environment'
        options:
          - Preview-Dominik
          - Preview-Eduard
          - Preview-Dennis
      additional_tag_info:
        description: 'Additional tag information'
        required: false
        type: string
        default: ''

jobs:
  ci:
    if: 1 == 2
    name: Run CI
    uses: ./.github/workflows/ci.yaml
  build:
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get short sha
        id: short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT 

      - name: Setup Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: citest/ciapp
          tags: |
            type=raw,enable=true,priority=400,value=${{ steps.short_sha.outputs.SHORT_SHA }},prefix=sha-,suffix=${{ github.event.inputs.additional_tag_info }}
      - name: Print secret
        run: echo ${{ secrets.MY_SECRET }}
      - name: Print var
        run: echo ${{ vars.MY_VAR }}
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    environment: 
      name: Development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: citest/ciapp
          tags: |
            type=sha,enable=true,priority=400,prefix=,suffix=,format=short
      - name: Print secret
        run: echo ${{ secrets.MY_SECRET }}
      - name: Print var
        run: echo ${{ vars.MY_VAR }}